openapi: 3.0.0
info:
  title: Agile Fridge RESTful API
paths:
  /issues:
    get:
      summary: Optionally looks for issues that comply with the filters applied
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - $ref: '#/components/parameters/Id'
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: createTime
          schema:
            type: string
        - in: query
          name: updateTime
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: owner
          schema:
            type: string
        - in: query
          name: creator
          schema:
            type: string
        - in: query
          name: assignee
          schema:
            type: string
        - in: query
          name: requestor
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates an issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCreate'
      responses:
        204:
          description: The issue was created
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Updates an issue
      parameters:
        - $ref: '#/components/parameters/RequiredId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdate'
      responses:
        204:
          description: The issue was updated
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes an issue
      parameters:
        - $ref: '#/components/parameters/RequiredId'
      responses:
        204:
          description: The issue was deleted
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    Id:
      in: query
      name: id
      required: false
      schema:
        type: string
    RequiredId:
      in: query
      name: id
      required: true
      schema:
        type: string
  schemas:
    # resources
    ProjectChild:
      type: object
        properties:
          projectId:
            type: string
    IssueCreate:
      allOf:
        - required:
            - title
            - body
            - projectId
        - $ref: '#/components/schemas/ProjectChild'
        - $ref: '#/components/schemas/DescriptiveMetadata'
        - $ref: '#/components/schemas/MutableOwnershipMetadata'
    IssueUpdate:
      allOf:
        - $ref: '#/components/schemas/ProjectChild'
        - $ref: '#/components/schemas/DescriptiveMetadata'
        - $ref: '#/components/schemas/MutableOwnershipMetadata'
    Issue:
      allOf:
        - $ref: '#/components/schemas/IdentifyingData'
        - $ref: '#/components/schemas/MutationTimestamps'
        - $ref: '#/components/schemas/ProjectChild'
        - $ref: '#/components/schemas/DescriptiveMetadata'
        - $ref: '#/components/schemas/OwnershipMetadata'
    # shared properties
    IdentifyingData:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    MutationTimestamps:
      type: object
      properties:
        createTime:
          type: string
        updateTime:
          type: string
        deleteTime:
          type: string
    DescriptiveMetadata:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    MutableOwnershipMetadata:
      type: object
      properties:
        owner:
          type: string
        assignee:
          type: string
        requestor:
          type: string
    ImmutableOwnershipMetadata:
      type: object
      properties:
        creator:
          type: string
    OwnershipMetadata:
      allOf:
        - $ref: '#/components/schemas/MutableOwnershipMetadata'
        - $ref: '#/components/schemas/ImmutableOwnershipMetadata'
    # errors
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
